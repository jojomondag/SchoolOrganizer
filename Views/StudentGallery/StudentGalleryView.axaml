<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:SchoolOrganizer.ViewModels"
             xmlns:models="using:SchoolOrganizer.Models"
             xmlns:views="using:SchoolOrganizer.Views"
             xmlns:profileCard="using:SchoolOrganizer.Views.ProfileCard"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
             x:Class="SchoolOrganizer.Views.StudentGallery.StudentGalleryView"
             x:DataType="vm:StudentGalleryViewModel"
             x:Name="GalleryView">

  <UserControl.Resources>
    <views:UniversalImageConverter x:Key="UniversalImageConverter"/>
    <views:StringIsNullOrWhiteSpaceConverter x:Key="IsNullOrWhiteSpace"/>
    <views:StudentSelectionBrushConverter x:Key="StudentSelectionBrushConverter"/>
    <views:StudentCountToCardSizeConverter x:Key="StudentCountToCardSize"/>
    <views:StudentCountToImageSizeConverter x:Key="StudentCountToImageSize"/>
    <views:StudentCountToFontSizeConverter x:Key="StudentCountToFontSize"/>
    <views:StudentCountToVisibilityConverter x:Key="StudentCountToVisibility"/>
    <ControlTemplate x:Key="FlatButtonTemplate">
      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}">
        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
      </Border>
    </ControlTemplate>
    

  </UserControl.Resources>
  <Design.DataContext>
    <vm:StudentGalleryViewModel/>
  </Design.DataContext>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

  <!-- Header and Filters -->
  <Border x:Name="HeaderBorder" Grid.Row="0" Background="{DynamicResource WhiteColor}" Padding="24,20">
      <Grid HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="400"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Search Box with Icon -->
        <Border Grid.Column="0" 
                Background="{DynamicResource LightBlueColor}" 
                BorderBrush="{DynamicResource BlackColor}" 
                BorderThickness="2" 
                CornerRadius="25" 
                Padding="16,0" 
                Margin="0,0,16,0">
          <Border.Styles>
            <Style Selector="Border:pointerover">
              <Setter Property="BorderBrush" Value="{DynamicResource SearchSelectionColor}"/>
            </Style>
          </Border.Styles>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Search Icon -->
            <TextBlock Grid.Column="0" 
                       Text="🔍" 
                       FontSize="14" 
                       Foreground="{DynamicResource BlackColor}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,12,0"/>
            
            <!-- Search TextBox -->
            <TextBox Grid.Column="1" 
                     Name="SearchTextBox"
                     Text="{Binding SearchText, Mode=TwoWay}" 
                     Watermark="Search students by name, class, or mentor..." 
                     Background="{DynamicResource TransparentColor}"
                     BorderThickness="2"
                     BorderBrush="{DynamicResource TransparentColor}"
                     Padding="8,12"
                     FontSize="14">
              <TextBox.Styles>
                <!-- Custom search box styling with visible selection and focus -->
                <Style Selector="TextBox">
                  <Setter Property="SelectionBrush" Value="{DynamicResource SearchSelectionColor}"/>
                  <Setter Property="SelectionForegroundBrush" Value="{DynamicResource BlackColor}"/>
                  <Setter Property="CaretBrush" Value="{DynamicResource BlackColor}"/>
                </Style>
                <Style Selector="TextBox:focus">
                  <Setter Property="BorderBrush" Value="{DynamicResource SearchSelectionColor}"/>
                  <Setter Property="BorderThickness" Value="2"/>
                </Style>
                <!-- Override template border focus -->
                <Style Selector="TextBox:focus /template/ Border">
                  <Setter Property="BorderBrush" Value="{DynamicResource SearchSelectionColor}"/>
                  <Setter Property="BorderThickness" Value="2"/>
                </Style>
              </TextBox.Styles>
            </TextBox>
          </Grid>
        </Border>

        <!-- Add Student Button -->
        <Button Grid.Column="1" 
                Content="Add Student" 
                Command="{Binding AddStudentCommand}"
                Background="{DynamicResource BlackColor}"
                Foreground="{DynamicResource WhiteColor}"
                BorderThickness="0"
                CornerRadius="8"
                Padding="20,12"
                FontWeight="SemiBold"
                FontSize="14">
          <Button.Styles>
            <Style Selector="Button:pointerover">
              <Setter Property="Background" Value="{DynamicResource DarkBlue}"/>
            </Style>
          </Button.Styles>
        </Button>
      </Grid>
    </Border>

    <!-- Student Gallery -->
  <ScrollViewer Name="StudentsScrollViewer" Grid.Row="1" 
                  Padding="20" 
                  VerticalScrollBarVisibility="Auto" 
                  HorizontalScrollBarVisibility="Disabled"
                  ClipToBounds="False"
                  VerticalAlignment="Stretch">
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="400" ClipToBounds="False">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Background button for deselection -->
        <Button Background="{DynamicResource TransparentColor}"
                BorderThickness="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{Binding DeselectStudentCommand}"
                Cursor="Arrow"
                Grid.RowSpan="2"
                Template="{StaticResource FlatButtonTemplate}">
          <Button.Styles>
            <Style Selector="Button:pointerover">
              <Setter Property="Background" Value="{DynamicResource TransparentColor}"/>
            </Style>
            <Style Selector="Button:pressed">
              <Setter Property="Background" Value="{DynamicResource TransparentColor}"/>
            </Style>
          </Button.Styles>
        </Button>
        
        <!-- Loading Indicator -->
        <Border IsVisible="{Binding IsLoading}" 
                Background="{DynamicResource LightBlueColor}" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                Grid.RowSpan="2">
          <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="Loading students..." FontSize="16" HorizontalAlignment="Center"/>
          </StackPanel>
        </Border>

        <!-- Students Grid - Multiple Students -->
        <ItemsControl x:Name="StudentsContainer" 
                      Grid.Row="0"
                      ItemsSource="{Binding Students}" 
                      ClipToBounds="False"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Margin="0,0,0,20">
          <ItemsControl.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!IsLoading"/>
              <Binding Path="ShowMultipleStudents"/>
            </MultiBinding>
          </ItemsControl.IsVisible>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel x:Name="CardsWrapPanel"
                         Orientation="Horizontal" 
                         ClipToBounds="False"
                         HorizontalAlignment="Center"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.ItemTemplate>
            <DataTemplate x:DataType="models:Student">
              <!-- Wrap ProfileCard with selection functionality -->
              <Button Command="{Binding $parent[ItemsControl].((vm:StudentGalleryViewModel)DataContext).SelectStudentCommand}"
                      CommandParameter="{Binding}"
                      Background="{DynamicResource TransparentColor}"
                      BorderThickness="0"
                      Padding="0"
                      ClipToBounds="False"
                      Template="{StaticResource FlatButtonTemplate}">
                <Button.Styles>
                  <Style Selector="Button">
                    <Setter Property="Background" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                  </Style>
                  <Style Selector="Button:pointerover">
                    <Setter Property="Background" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                  </Style>
                  <Style Selector="Button:pressed">
                    <Setter Property="Background" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TransparentColor}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                  </Style>
                </Button.Styles>
                
                <Border Background="{DynamicResource WhiteColor}" 
                        CornerRadius="8" 
                        Margin="12" 
                        BoxShadow="{DynamicResource ShadowDark}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        BorderThickness="2"
                        Width="{Binding $parent[ItemsControl].((vm:StudentGalleryViewModel)DataContext).Students, Converter={StaticResource StudentCountToCardSize}}"
                        RenderTransformOrigin="0.5,0.5"
                        >
                  
                  <Border.BorderBrush>
                    <MultiBinding Converter="{StaticResource StudentSelectionBrushConverter}">
                      <Binding Path="$parent[ItemsControl].((vm:StudentGalleryViewModel)DataContext).SelectedStudent"/>
                      <Binding Path="."/>
                    </MultiBinding>
                  </Border.BorderBrush>
                  
                  <Border.Transitions>
                    <Transitions>
                      <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.4" Easing="QuadraticEaseInOut"/>
                      <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.4" Easing="QuadraticEaseInOut"/>
                    </Transitions>
                  </Border.Transitions>
                  
                  <Border.Styles>
                    <Style Selector="Border">
                      <Setter Property="RenderTransform" Value="scale(1)"/>
                      <Setter Property="Panel.ZIndex" Value="0"/>
                    </Style>
                    <Style Selector="Border:pointerover">
                      <Setter Property="RenderTransform" Value="scale(1.05)"/>
                      <Setter Property="BoxShadow" Value="{DynamicResource ShadowStrong}"/>
                      <Setter Property="Panel.ZIndex" Value="10"/>
                    </Style>
                  </Border.Styles>

                  <!-- Use the generic ProfileCard inside a clipping border to preserve rounded corners -->
                  <Border CornerRadius="8" ClipToBounds="True" Background="{DynamicResource TransparentColor}">
                    <profileCard:ProfileCard DataContext="{Binding}" 
                                           StudentCount="{Binding $parent[ItemsControl].((vm:StudentGalleryViewModel)DataContext).Students.Count}"
                                           Margin="0"/>
                  </Border>
                </Border>
              </Button>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Single Student - Detailed View -->
        <ContentControl Grid.Row="0" 
                       Content="{Binding Students[0]}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Margin="0">
          <ContentControl.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!IsLoading"/>
              <Binding Path="ShowSingleStudent"/>
            </MultiBinding>
          </ContentControl.IsVisible>
          <ContentControl.ContentTemplate>
            <DataTemplate x:DataType="models:Student">
              <profileCard:DetailedProfileCard DataContext="{Binding}" 
                                              ImageClicked="OnDetailedProfileImageClicked"/>
            </DataTemplate>
          </ContentControl.ContentTemplate>
        </ContentControl>
        
        <!-- Spacer to ensure bottom cards are fully visible when details panel is shown -->
        <Border Grid.Row="1"
                Height="{Binding #SelectedDetailsHost.Bounds.Height}"
                Margin="0"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNotNull}}"/>
        <!-- Fixed overscroll (40px) when selected -->
        <Border Grid.Row="1"
                Height="40"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNotNull}}"/>
        <!-- Overscroll padding when no selection to fully reveal last row -->
        <Border Grid.Row="1"
                Height="40"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNull}}"/>
      </Grid>
    </ScrollViewer>

    <!-- Selected Student Details -->
    <Border Grid.Row="2" x:Name="SelectedDetailsHost"
            Background="{DynamicResource TransparentColor}" 
            Padding="20"
            IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNotNull}}">
      <Border Background="{DynamicResource WhiteColor}"
              CornerRadius="8"
              Padding="16"
              BoxShadow="{DynamicResource ShadowMedium}">
        <Grid>
          <Button Content="✎"
                  Width="24" Height="24"
                  Background="{DynamicResource LightBlueColor}" BorderBrush="{DynamicResource BlackColor}"
                  HorizontalAlignment="Left" VerticalAlignment="Top"
                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                  Padding="0"
                  Command="{Binding EditStudentCommand}"
                  CommandParameter="{Binding SelectedStudent}"
                  Template="{StaticResource FlatButtonTemplate}"/>
          <StackPanel Margin="0,32,0,0">
            <TextBlock Text="Selected Student Details" FontSize="18" FontWeight="Bold"/>
            <Separator Margin="0,8,0,8"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedStudent.Name}" Margin="0,0,20,0"/>
              
              <TextBlock Grid.Row="0" Grid.Column="2" Text="Email:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding SelectedStudent.Email}"/>

              <TextBlock Grid.Row="1" Grid.Column="0" Text="Class:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedStudent.ClassName}" Margin="0,0,20,0"/>
              
              <TextBlock Grid.Row="1" Grid.Column="2" Text="Mentors:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding SelectedStudent.SecondaryInfo}"/>
            </Grid>
          </StackPanel>
        </Grid>
      </Border>
    </Border>
  </Grid>
</UserControl>
