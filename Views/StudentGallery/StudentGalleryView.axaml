<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:SchoolOrganizer.ViewModels"
             xmlns:models="using:SchoolOrganizer.Models"
             xmlns:views="using:SchoolOrganizer.Views.Converters"
             xmlns:profileCard="using:SchoolOrganizer.Views.ProfileCards"
             xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:addStudent="using:SchoolOrganizer.Views.StudentGallery"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
             x:Class="SchoolOrganizer.Views.StudentGallery.StudentGalleryView"
             x:DataType="vm:StudentGalleryViewModel"
             x:Name="GalleryView">

  <UserControl.Resources>
    <views:UniversalImageConverter x:Key="UniversalImageConverter"/>
    <views:StudentSelectionBrushConverter x:Key="StudentSelectionBrushConverter"/>
    <views:DisplayConfigConverter x:Key="DisplayConfigConverter"/>
    <views:IdToIsAddCardConverter x:Key="IdToIsAddCardConverter"/>
    <views:IdToIsStudentCardConverter x:Key="IdToIsStudentCardConverter"/>
    <ControlTemplate x:Key="FlatButtonTemplate">
      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}">
        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
      </Border>
    </ControlTemplate>

  </UserControl.Resources>
  <Design.DataContext>
    <vm:StudentGalleryViewModel/>
  </Design.DataContext>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <!-- Student Gallery -->
  <Border Grid.Row="1" Background="{DynamicResource BackgroundTertiaryBrush}">
    <Grid>
      <!-- Add Student View - Completely replaces gallery when IsAddingStudent is true -->
      <addStudent:AddStudentView Name="AddStudentView" 
                                 IsVisible="{Binding $parent[UserControl].DataContext.IsAddingStudent}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"/>
      
      <!-- Student Gallery Content - Only shown when NOT adding student -->
      <ScrollViewer Name="StudentsScrollViewer" 
                    Padding="0,20,0,40" 
                    VerticalScrollBarVisibility="Auto" 
                    HorizontalScrollBarVisibility="Disabled"
                    ClipToBounds="False"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    IsVisible="{Binding $parent[UserControl].DataContext.IsAddingStudent, Converter={x:Static BoolConverters.Not}}">
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" ClipToBounds="False">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Search Bar - Only visible in gallery view -->
        <Border Grid.Row="0" 
                Background="{DynamicResource BackgroundPrimaryBrush}" 
                Padding="24,20" 
                Margin="0,0,0,20">
          <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="400"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Search Box with Icon (Centered) -->
            <Border Grid.Column="1"
                    Background="{DynamicResource BackgroundTertiaryBrush}"
                    BorderBrush="{DynamicResource CardBorderBrush}"
                    BorderThickness="2"
                    CornerRadius="25"
                    Padding="16,0"
                    Width="400"
                    HorizontalAlignment="Center">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <!-- Search Icon -->
                <materialIcons:MaterialIcon Grid.Column="0"
                                            Kind="Magnify"
                                            Width="20"
                                            Height="20"
                                            Foreground="{DynamicResource IconBrush}"
                                            VerticalAlignment="Center"
                                            Margin="0,0,12,0"/>
                
                <!-- Search TextBox -->
                <TextBox Grid.Column="1" 
                         Name="SearchTextBox"
                         Text="{Binding SearchText, Mode=TwoWay}" 
                         Watermark="Search students by name, class, or teacher..." 
                         Background="Transparent"
                         BorderThickness="0"
                         BorderBrush="Transparent"
                         Padding="8,12"
                         FontSize="14"
                         FocusAdorner="{x:Null}"
                         SelectionBrush="{DynamicResource BackgroundTertiaryBrush}"
                         SelectionForegroundBrush="{DynamicResource TextPrimaryBrush}"
                         CaretBrush="{DynamicResource TextPrimaryBrush}"
                         Foreground="{DynamicResource TextPrimaryBrush}">
                  <TextBox.Styles>
                    <Style Selector="TextBox:focus">
                      <Setter Property="BorderBrush" Value="Transparent"/>
                      <Setter Property="BorderThickness" Value="0"/>
                      <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style Selector="TextBox:focus /template/ Border">
                      <Setter Property="BorderBrush" Value="Transparent"/>
                      <Setter Property="BorderThickness" Value="0"/>
                      <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style Selector="TextBox:pointerover">
                      <Setter Property="BorderBrush" Value="Transparent"/>
                      <Setter Property="BorderThickness" Value="0"/>
                      <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style Selector="TextBox:pointerover /template/ Border">
                      <Setter Property="BorderBrush" Value="Transparent"/>
                      <Setter Property="BorderThickness" Value="0"/>
                      <Setter Property="Background" Value="Transparent"/>
                    </Style>
                  </TextBox.Styles>
                </TextBox>
              </Grid>
            </Border>
          </Grid>
        </Border>
        
        <!-- Background button for deselection -->
        <Button Background="Transparent"
                BorderThickness="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{Binding DeselectStudentCommand}"
                Cursor="Arrow"
                Grid.Row="1"
                Grid.RowSpan="1"
                Template="{StaticResource FlatButtonTemplate}">
          <Button.Styles>
            <Style Selector="Button:pointerover">
              <Setter Property="Background" Value="Transparent"/>
            </Style>
            <Style Selector="Button:pressed">
              <Setter Property="Background" Value="Transparent"/>
            </Style>
          </Button.Styles>
        </Button>
        
        <!-- Loading Indicator -->
        <Border IsVisible="{Binding IsLoading}"
                Background="{DynamicResource BackgroundTertiaryBrush}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Grid.Row="1">
          <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="Loading students..."
                       FontSize="16"
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource TextPrimaryBrush}"/>
          </StackPanel>
        </Border>

        <!-- Empty State - No Students -->
        <Border Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{DynamicResource BackgroundPrimaryBrush}"
                BorderBrush="{DynamicResource CardBorderBrush}"
                BorderThickness="1"
                CornerRadius="16"
                Padding="40"
                BoxShadow="{DynamicResource CardBoxShadows}"
                Margin="40">
          <Border.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!IsLoading"/>
              <Binding Path="ShowEmptyState"/>
            </MultiBinding>
          </Border.IsVisible>
          <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="20">
            <TextBlock Text="No students found"
                       FontSize="24"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource TextPrimaryBrush}"/>
            <TextBlock Text="It looks like there are no students in your gallery."
                       FontSize="16"
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource TextSecondaryBrush}"
                       TextWrapping="Wrap"/>
            <Button Content="← Back to All Students"
                    Command="{Binding BackToGalleryCommand}"
                    HorizontalAlignment="Center"
                    Padding="12,8"
                    Background="{DynamicResource BackgroundTertiaryBrush}"
                    BorderBrush="{DynamicResource CardBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="6"
                    FontSize="14"
                    FontWeight="Normal"
                    Foreground="{DynamicResource TextPrimaryBrush}"
                    Cursor="Hand">
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource BackgroundTertiaryBrush}"/>
                  <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                </Style>
                <Style Selector="Button:pointerover">
                  <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryBrush}"/>
                  <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                </Style>
                <Style Selector="Button:pressed">
                  <Setter Property="Background" Value="{DynamicResource CardBorderBrush}"/>
                  <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                </Style>
              </Button.Styles>
            </Button>
          </StackPanel>
        </Border>

        <!-- Students Grid - Multiple Students -->
        <ItemsControl x:Name="StudentsContainer" 
                      Grid.Row="1"
                      ItemsSource="{Binding Students}" 
                      ClipToBounds="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top"
                      Margin="0,0,0,20">
          <ItemsControl.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!IsLoading"/>
              <Binding Path="ShowMultipleStudents"/>
              <Binding Path="!ShowEmptyState"/>
            </MultiBinding>
          </ItemsControl.IsVisible>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel x:Name="CardsWrapPanel"
                         Orientation="Horizontal" 
                         ClipToBounds="False"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Top"
                         Margin="0,0,0,20"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.ItemTemplate>
            <DataTemplate x:DataType="models:IPerson">
              <!-- Card Content - Switch between Student and AddStudentProfileCard -->
              <ContentControl Content="{Binding}">
                <ContentControl.ContentTemplate>
                  <DataTemplate x:DataType="models:IPerson">
                    <Grid>
                      <!-- Student Card Template -->
                      <Panel IsVisible="{Binding Id, Converter={StaticResource IdToIsStudentCardConverter}}">
                        <!-- Small Card for Small DisplayLevel -->
                        <profileCard:ProfileCardSmall Name="{Binding Name}"
                                                     RoleInfo="{Binding RoleInfo}"
                                                     PictureUrl="{Binding PictureUrl}"
                                                     DataContext="{Binding}"
                                                     ProfileImageClicked="OnProfileImageClicked"
                                                     ProfileImageUpdated="OnProfileImageUpdated"
                                                     CardClicked="OnStudentCardClicked"
                                                     CardDoubleClicked="OnStudentCardDoubleClicked"
                                                     IsVisible="{Binding $parent[UserControl].DataContext.CurrentDisplayLevel, Converter={StaticResource DisplayConfigConverter}, ConverterParameter=IsSmall, FallbackValue=False}"/>

                        <!-- Medium Card for Medium DisplayLevel -->
                        <profileCard:ProfileCardMedium Name="{Binding Name}"
                                                       Class="{Binding RoleInfo}"
                                                       Teacher="{Binding SecondaryInfo}"
                                                       PictureUrl="{Binding PictureUrl}"
                                                       DataContext="{Binding}"
                                                       ProfileImageClicked="OnProfileImageClicked"
                                                       ProfileImageUpdated="OnProfileImageUpdated"
                                                       CardClicked="OnStudentCardClicked"
                                                       CardDoubleClicked="OnStudentCardDoubleClicked"
                                                       IsVisible="{Binding $parent[UserControl].DataContext.CurrentDisplayLevel, Converter={StaticResource DisplayConfigConverter}, ConverterParameter=IsMedium, FallbackValue=True}"/>
                      </Panel>
                      
                      <!-- Add Student Card Template -->
                      <Panel>
                        <Panel.IsVisible>
                          <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="Id" Converter="{StaticResource IdToIsAddCardConverter}"/>
                            <Binding Path="$parent[UserControl].DataContext.IsAddingStudent" Converter="{x:Static BoolConverters.Not}" FallbackValue="True"/>
                          </MultiBinding>
                        </Panel.IsVisible>
                        <!-- Add Student Card for Small DisplayLevel -->
                        <profileCard:AddStudentProfileCardSmall Name="AddStudentCardSmall"
                                                               CardClicked="OnAddStudentCardClicked"
                                                               IsVisible="{Binding $parent[UserControl].DataContext.CurrentDisplayLevel, Converter={StaticResource DisplayConfigConverter}, ConverterParameter=IsSmall, FallbackValue=False}"/>

                        <!-- Add Student Card for Medium DisplayLevel -->
                        <profileCard:AddStudentProfileCardMedium Name="AddStudentCardMedium"
                                                               CardClicked="OnAddStudentCardClicked"
                                                               IsVisible="{Binding $parent[UserControl].DataContext.CurrentDisplayLevel, Converter={StaticResource DisplayConfigConverter}, ConverterParameter=IsMedium, FallbackValue=True}"/>
                      </Panel>
                    </Grid>
                  </DataTemplate>
                </ContentControl.ContentTemplate>
              </ContentControl>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Single Student - Detailed View (Large Card) -->
        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
          <Grid.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!IsLoading"/>
              <Binding Path="ShowSingleStudent"/>
            </MultiBinding>
          </Grid.IsVisible>
          
          <!-- Background button for double-click to return to gallery -->
          <Button Background="Transparent"
                  BorderThickness="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Cursor="Arrow"
                  Template="{StaticResource FlatButtonTemplate}"
                  DoubleTapped="OnBackgroundDoubleTapped">
            <Button.Styles>
              <Style Selector="Button:pointerover">
                <Setter Property="Background" Value="Transparent"/>
              </Style>
              <Style Selector="Button:pressed">
                <Setter Property="Background" Value="Transparent"/>
              </Style>
            </Button.Styles>
          </Button>
          
          <!-- The detailed profile card -->
          <ContentControl Content="{Binding FirstStudent}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Margin="0">
            <ContentControl.ContentTemplate>
              <DataTemplate x:DataType="models:Student">
                <profileCard:ProfileCardLarge Name="{Binding Name}"
                                             Email="{Binding Email}"
                                             RoleInfo="{Binding RoleInfo}"
                                             SecondaryInfo="{Binding SecondaryInfo}"
                                             EnrollmentDate="{Binding EnrollmentDate, StringFormat='{}{0:MMMM d, yyyy}'}"
                                             Id="{Binding Id}"
                                             PictureUrl="{Binding PictureUrl}"
                                             DataContext="{Binding}"
                                             ProfileImageClicked="OnDetailedProfileImageClicked"
                                             ProfileImageUpdated="OnProfileImageUpdated"
                                             ViewAssignmentsClicked="OnViewAssignmentsClicked"/>
              </DataTemplate>
            </ContentControl.ContentTemplate>
          </ContentControl>
        </Grid>
        
        <!-- Spacer to ensure bottom cards are fully visible when details panel is shown -->
        <Border Grid.Row="1"
                Height="{Binding #SelectedDetailsHost.Bounds.Height}"
                Margin="0"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNotNull}}"/>
        <!-- Fixed overscroll (60px) when selected to ensure add card is visible -->
        <Border Grid.Row="1"
                Height="60"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNotNull}}"/>
        <!-- Overscroll padding when no selection to fully reveal last row including add card -->
        <Border Grid.Row="1"
                Height="60"
                IsHitTestVisible="False"
                IsVisible="{Binding SelectedStudent, Converter={x:Static ObjectConverters.IsNull}}"/>
      </Grid>
    </ScrollViewer>
    </Grid>
  </Border>

    <!-- Download Progress -->
    <Border Grid.Row="2" x:Name="DownloadProgressHost"
            Background="{DynamicResource BackgroundPrimaryBrush}" 
            BorderBrush="{DynamicResource CardBorderBrush}"
            BorderThickness="1"
            CornerRadius="8"
            Padding="20"
            Margin="20"
            BoxShadow="{DynamicResource ShadowMedium}">
      <Border.IsVisible>
        <Binding Path="IsDownloadingAssignments"/>
      </Border.IsVisible>
      <StackPanel Spacing="12">
        <TextBlock Text="Downloading Assignments..." 
                   FontSize="16" 
                   FontWeight="Bold"
                   Foreground="{DynamicResource TextPrimaryBrush}"/>
        <TextBlock Text="{Binding DownloadStatusText}"
                   FontSize="14"
                   Foreground="{DynamicResource TextSecondaryBrush}"/>
        <ProgressBar IsIndeterminate="True"
                    Height="4"
                    Background="{DynamicResource BackgroundTertiaryBrush}"
                    Foreground="{DynamicResource AccentButtonBackground}"/>
      </StackPanel>
    </Border>

    <!-- Selected Student Details -->
    <Border Grid.Row="2" x:Name="SelectedDetailsHost"
            Background="{DynamicResource TransparentColor}" 
            Padding="20">
      <Border.IsVisible>
        <MultiBinding Converter="{x:Static BoolConverters.And}">
          <Binding Path="SelectedStudent" Converter="{x:Static ObjectConverters.IsNotNull}"/>
          <Binding Path="ShowSingleStudent" Converter="{x:Static BoolConverters.Not}"/>
          <Binding Path="IsDownloadingAssignments" Converter="{x:Static BoolConverters.Not}"/>
        </MultiBinding>
      </Border.IsVisible>
      <Border Background="{DynamicResource BackgroundPrimaryBrush}"
              BorderBrush="{DynamicResource CardBorderBrush}"
              BorderThickness="1"
              CornerRadius="8"
              Padding="16"
              BoxShadow="{DynamicResource ShadowMedium}">
        <Grid>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Spacing="8">
            <Button Width="24" Height="24"
                    Background="{DynamicResource ActionBlueLightBrush}" 
                    BorderBrush="{DynamicResource ActionBlueBrush}"
                    BorderThickness="1"
                    HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                    Padding="0"
                    Command="{Binding EditStudentCommand}"
                    CommandParameter="{Binding SelectedStudent}"
                    Template="{StaticResource FlatButtonTemplate}">
              <materialIcons:MaterialIcon Kind="AccountEdit" 
                                         Width="18" 
                                         Height="18"
                                         Foreground="{DynamicResource ActionBlueBrush}"/>
              <Button.Styles>
                <Style Selector="Button:pointerover">
                  <Setter Property="Background" Value="{DynamicResource ActionBlueBrush}"/>
                  <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
                </Style>
              </Button.Styles>
            </Button>
            <Button Width="24" Height="24"
                    Background="{DynamicResource ActionRedLightBrush}" 
                    BorderBrush="{DynamicResource ActionRedBrush}"
                    BorderThickness="1"
                    HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                    Padding="0"
                    Command="{Binding DeleteStudentCommand}"
                    CommandParameter="{Binding SelectedStudent}"
                    Template="{StaticResource FlatButtonTemplate}">
              <materialIcons:MaterialIcon Kind="AccountRemove" 
                                         Width="18" 
                                         Height="18"
                                         Foreground="{DynamicResource ActionRedBrush}"/>
              <Button.Styles>
                <Style Selector="Button:pointerover">
                  <Setter Property="Background" Value="{DynamicResource ActionRedBrush}"/>
                  <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
                </Style>
              </Button.Styles>
            </Button>
          </StackPanel>
          <StackPanel Margin="0,32,0,0">
            <TextBlock Text="Selected Student Details" FontSize="18" FontWeight="Bold"/>
            <Separator Margin="0,8,0,8"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedStudentName}" Margin="0,0,20,0"/>
              
              <TextBlock Grid.Row="0" Grid.Column="2" Text="Email:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding SelectedStudentEmail}"/>

              <TextBlock Grid.Row="1" Grid.Column="0" Text="Class:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedStudentClassName}" Margin="0,0,20,0"/>
              
              <TextBlock Grid.Row="1" Grid.Column="2" Text="Teachers:" FontWeight="Bold" Margin="0,0,10,0"/>
              <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding SelectedStudentSecondaryInfo}"/>
            </Grid>
          </StackPanel>
        </Grid>
      </Border>
    </Border>
  </Grid>
</UserControl>
