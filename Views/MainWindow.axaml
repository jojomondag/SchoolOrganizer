<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:SchoolOrganizer.ViewModels"
        xmlns:views="using:SchoolOrganizer.Views"
        xmlns:studentGallery="using:SchoolOrganizer.Views.StudentGallery"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
        x:Class="SchoolOrganizer.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="School Organizer"
        Width="2390"
        Height="900"
        MinWidth="800"
        MinHeight="600">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Styles>
        <Style Selector="ComboBox:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource DarkBlueColor}"/>
        </Style>
        <Style Selector="DatePicker:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource DarkBlueColor}"/>
        </Style>
        
        <!-- TextBox selection styling -->
        <Style Selector="TextBox">
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBackgroundColor}"/>
            <Setter Property="SelectionForegroundBrush" Value="{DynamicResource SelectionForegroundColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource BlackColor}"/>
        </Style>
        
        
        <Style Selector="ToggleButton.tab">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BlackColor}"/>
            <Setter Property="BorderThickness" Value="1,1,0,0"/>
            <Setter Property="CornerRadius" Value="10,10,0,0"/>
            <Setter Property="Margin" Value="0,0,0,-1"/>
            <Setter Property="FocusAdorner" Value="{x:Null}"/>
        </Style>

        <Style Selector="ToggleButton.tab:checked">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource WhiteColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        </Style>

        <!-- Target the ContentPresenter within the template for checked state -->
        <Style Selector="ToggleButton.tab:checked /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        </Style>

        <!-- Target the Border within the template for checked state -->
        <Style Selector="ToggleButton.tab:checked /template/ Border">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource WhiteColor}"/>
        </Style>

        <Style Selector="ToggleButton.tab:pointerover">
            <Setter Property="Background" Value="{DynamicResource BlackColor}"/>
        </Style>

        <Style Selector="ToggleButton.tab:checked:pointerover">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource WhiteColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        </Style>

        <!-- Ensure template elements stay white when checked and hovered -->
        <Style Selector="ToggleButton.tab:checked:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}"/>
        </Style>

        <Style Selector="ToggleButton.tab:checked:pointerover /template/ Border">
            <Setter Property="Background" Value="{DynamicResource DarkBlueColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource WhiteColor}"/>
        </Style>
    </Window.Styles>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Navigation as Tabs -->
    <Border Grid.Row="0" Background="{DynamicResource LightBlueColor}" Padding="16,10,16,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Spacing="8">
                    <ToggleButton Classes="tab"
                                  IsChecked="{Binding IsHomeActive}"
                                  Command="{Binding NavigateToHomeCommand}"
                                  Content="Home"/>

                    <ToggleButton Classes="tab"
                                  IsChecked="{Binding IsStudentGalleryActive}"
                                  Command="{Binding NavigateToStudentGalleryCommand}"
                                  Content="Student Gallery"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Content Area with blended background -->
    <Border Grid.Row="1" Background="{DynamicResource LightBlueColor}">
            <ContentControl Content="{Binding CurrentViewModel}">
                <ContentControl.DataTemplates>
                <!-- Template for StudentGalleryViewModel -->
                    <DataTemplate DataType="vm:StudentGalleryViewModel">
                        <studentGallery:StudentGalleryView/>
                    </DataTemplate>
                
                <!-- Template for HomeViewModel -->
                    <DataTemplate DataType="vm:HomeViewModel">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="20">
                            <TextBlock Text="{Binding Title}" 
                                       FontSize="32" 
                                       FontWeight="Bold" 
                                       HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding Message}" 
                                       FontSize="16" 
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"/>
                            <Button Content="Go to Student Gallery" 
                                    Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).NavigateToStudentGalleryCommand}"
                                    Padding="20,10"
                                    FontSize="14"/>
                        </StackPanel>
                    </DataTemplate>
                </ContentControl.DataTemplates>
            </ContentControl>
        </Border>
    </Grid>

</Window>
